// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Xpressive.Home.DatabaseModel;

namespace Xpressive.Home.Migrations
{
    [DbContext(typeof(XpressiveHomeContext))]
    partial class XpressiveHomeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Xpressive.Home.Contracts.Automation.ScheduledScript", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("CronTab")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("ScriptId");

                    b.HasKey("Id");

                    b.ToTable("ScheduledScript");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Automation.Script", b =>
                {
                    b.Property<string>("Id")
                        .IsRequired();

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("JavaScript")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Script");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Automation.TriggeredScript", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("ScriptId");

                    b.Property<string>("Variable")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("TriggeredScript");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Rooms.Room", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Rooms.RoomDevice", b =>
                {
                    b.Property<string>("Gateway")
                        .HasMaxLength(16);

                    b.Property<string>("Id")
                        .HasMaxLength(64);

                    b.Property<string>("RoomId");

                    b.HasKey("Gateway", "Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomDevice");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Rooms.RoomScript", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("GroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("ScriptId");

                    b.HasKey("Id");

                    b.ToTable("RoomScript");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Rooms.RoomScriptGroup", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("RoomId");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("RoomScriptGroup");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Services.Radio", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Radio");
                });

            modelBuilder.Entity("Xpressive.Home.Services.DeviceDto", b =>
                {
                    b.Property<string>("Gateway")
                        .HasMaxLength(64);

                    b.Property<string>("Id")
                        .HasMaxLength(64);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Properties")
                        .IsRequired();

                    b.HasKey("Gateway", "Id");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Xpressive.Home.Services.Variables.PersistedVariable", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Name");

                    b.ToTable("Variable");
                });

            modelBuilder.Entity("Xpressive.Home.Services.WebHook", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32);

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("GatewayName")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("WebHook");
                });

            modelBuilder.Entity("Xpressive.Home.Contracts.Rooms.RoomDevice", b =>
                {
                    b.HasOne("Xpressive.Home.Contracts.Rooms.Room", "Room")
                        .WithMany("RoomDevice")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_RoomDevice_Room");
                });
#pragma warning restore 612, 618
        }
    }
}
